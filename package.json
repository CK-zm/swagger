{
  "name": "swagger2-postman2-converter",
  "version": "0.0.3",
  "description": "BETA - A module to convert swagger 2.0 JSONs to Postman Collection Format v2",
  "main": "index.js",
  "scripts": {
    "test": "scripts/test.sh",
    "test-lint": "scripts/test-lint.sh",
    "test-unit": "scripts/test-unit.sh"
  },
  "dependencies": {
    "expect.js": "^0.3.1",
    "js-yaml": "^3.10.0",
    "json-schema-faker": "^0.4.7",
    "lodash": "^4.17.5",
    "node-uuid": "^1.4.3",
    "postman-collection": "^3.1.1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/postmanlabs/swagger2-postman2.git"
  },
  "keywords": [
    "swagger",
    "postman",
    "newman"
  ],
  "author": "Postman Labs <help@getpostman.com>",
  "license": "Apache 2.0",
  "bugs": {
    "url": "https://github.com/postmanlabs/swagger2-postman2/issues"
  },
  "homepage": "https://github.com/postmanlabs/swagger2-postman2",
  "devDependencies": {
    "chai": "^4.1.2",
    "colors": "1.1.2",
    "eslint": "3.4.0",
    "eslint-plugin-security": "^1.4.0",
    "istanbul": "^0.4.5",
    "mocha": "3.0.2",
    "nsp": "3.1.0"
  },
  "com_postman_plugin": {
    "plugin_type": "importer",
    "name": "Swagger 2.0 to Postman",
    "source_format": "SWAGGER2.0",
    "source_format_name": "Swagger 2.0",
    "sample_input":{
      "swagger": "2.0",
      "info": {
        "description": "My API",
        "version": "1.0.0",
        "title": "My API",
        "termsOfService": "http://www.domain.com",
        "contact": {
          "name": "support@domain.com"
        }
      },
      "basePath": "/",
      "schemes": [
        "http"
      ],
      "paths": {
        "Authorization/LoginAPI": {
          "post": {
            "summary": "Authenticates you to the system and produces a session token that will be used for future calls",
            "description": "",
            "operationId": "LoginAPI",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "parameters": [
              {
                "in": "formData",
                "name": "UserName",
                "description": "Login Username",
                "required": true,
                "type": "string",
                "default": "Zaphod"
              },
              {
                "in": "formData",
                "name": "Password",
                "description": "Password",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "API Response with session ID if login is allowed",
                "schema": {
                  "$ref": "#/definitions/Authorization"
                }
              }
            }
          }
        }
      }
    }
  }
}
